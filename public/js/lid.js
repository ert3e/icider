!function(Q){var g={};function F(I){if(g[I])return g[I].exports;var C=g[I]={i:I,l:!1,exports:{}};return Q[I].call(C.exports,C,C.exports,F),C.l=!0,C.exports}F.m=Q,F.c=g,F.d=function(I,C,Q){F.o(I,C)||Object.defineProperty(I,C,{enumerable:!0,get:Q})},F.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},F.t=function(C,I){if(1&I&&(C=F(C)),8&I)return C;if(4&I&&"object"==typeof C&&C&&C.__esModule)return C;var Q=Object.create(null);if(F.r(Q),Object.defineProperty(Q,"default",{enumerable:!0,value:C}),2&I&&"string"!=typeof C)for(var g in C)F.d(Q,g,function(I){return C[I]}.bind(null,g));return Q},F.n=function(I){var C=I&&I.__esModule?function(){return I.default}:function(){return I};return F.d(C,"a",C),C},F.o=function(I,C){return Object.prototype.hasOwnProperty.call(I,C)},F.p="/",F(F.s=5)}({"./resources/js/lid.js":
/*!*****************************!*\
  !*** ./resources/js/lid.js ***!
  \*****************************/
/*! no static exports found */function(module,exports){eval('Vue.component("v-select", VueSelect.VueSelect);\n\nfunction formatNumber(n, c, d, t) {\n  var c = isNaN(c = Math.abs(c)) ? 2 : c,\n      d = d === undefined ? \'.\' : d,\n      t = t === undefined ? \',\' : t,\n      s = n < 0 ? \'-\' : \'\',\n      i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\n      j = (j = i.length) > 3 ? j % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : \'\') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \'$1\' + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \'\');\n}\n\n; // Allow the formatNumber function to be used as a filter\n\nVue.filter(\'formatCurrency\', function (value) {\n  return formatNumber(value, 2, \'.\', \' \');\n}); // The shopping cart component\n\nVue.component(\'shopping-cart\', {\n  props: [\'productItem\', \'tradeItem\'],\n  computed: {\n    Total: function Total() {\n      var total = 0;\n      this.productItem.forEach(function (item) {\n        total += item.cost * item.qty;\n      });\n      this.tradeItem.forEach(function (item) {\n        total += item.cost;\n      });\n\n      try {\n        init.total = total;\n      } catch (error) {}\n\n      return total;\n    }\n  },\n  methods: {\n    plusGoods: function plusGoods(id) {\n      this.$root.plusGoods(this.productItem[id].id);\n      this.productItem[id].qty++;\n    },\n    minusGoods: function minusGoods(id) {\n      if (this.productItem[id].qty !== 1) {\n        this.$root.minusGoods(this.productItem[id].id);\n        this.productItem[id].qty--;\n      }\n    },\n    removeItem: function removeItem(index, item) {\n      if (item == \'trade\') {\n        this.$root.delGoods(index.id);\n        this.tradeItem.splice(index, 1);\n      } else {\n        this.$root.delGoods(index.id);\n        this.productItem.splice(index, 1);\n      }\n    },\n    validate: function validate() {\n      if (this.$root.validateForm()) {\n        if (this.$root.sendValid) {\n          this.$root.send();\n          this.$root.delAllGoods();\n          this.productItem.splice(0);\n          this.tradeItem.splice(0);\n        }\n      }\n    }\n  }\n});\nvar init = new Vue({\n  el: \'#app\',\n  template: "\\n        <div class=\\"text-center\\">\\n            <form class=\\"needs-validation form-send\\" id=\\"validated-form\\" novalidate>\\n                <div class=\\"form-group\\">\\n                    <label for=\\"lid_name\\" class=\\"sr-only\\">\\u0418\\u043C\\u044F \\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F</label>\\n                    <input type=\\"text\\" class=\\"form-control\\" id=\\"lid_name\\"  placeholder=\\"\\u0418\\u043C\\u044F \\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\\" v-model=\\"lid_name\\" value=\\"\\" required>\\n                    <div class=\\"valid-feedback\\">\\n                        \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0418\\u043C\\u044F \\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044E!\\n                     </div>\\n                    <span class=\\"text-danger\\" v-if=\\"validationErrors.lid_name\\" style=\\"width: 100%;\\" v-text=\\"validationErrors.lid_name\\"></span>\\n                </div>\\n                <div class=\\"form-group\\">\\n                    <label for=\\"lid_phone\\" class=\\"sr-only\\">\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D</label>\\n                    <input type=\\"number\\" class=\\"form-control\\"  pattern=\\"[0-9]{3}-[0-9]{3}-[0-9]{4}\\" id=\\"lid_phone\\" v-model=\\"lid_phone\\" placeholder=\\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\" value=\\"\\" required>\\n                    <div class=\\"valid-feedback\\">\\n                        \\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D!\\n                    </div>\\n                    <span class=\\"text-danger\\" v-if=\\"validationErrors.lid_phone\\" style=\\"width: 100%;\\" v-text=\\"validationErrors.lid_phone\\"></span>\\n                </div>\\n                <div class=\\"form-group\\">\\n                    <button class=\\"btn btn-primary btn-lg send-email\\" type=\\"submit\\" @click.prevent=\\"validate()\\">\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C</button>\\n                </div>\\n            </form>\\n        </div>\\n    ",\n  data: function data() {\n    return {\n      lid_name: null,\n      email: null,\n      lid_phone: null,\n      //cart items\n      addresses: [],\n      validationErrors: {\n        lid_name: null,\n        lid_phone: null\n      },\n      validation: false,\n      newPoshtaPlace: "",\n      form: {\n        lid_name: null,\n        lid_phone: null\n      }\n    };\n  },\n  methods: {\n    send: function send() {\n      fetch("/api/telegram", {\n        method: \'post\',\n        body: JSON.stringify(this.form)\n      }).then(function (response) {\n        return response.text();\n      }).then(function (responseData) {\n        console.log(responseData);\n        Swal.fire({\n          icon: \'success\',\n          title: \'Заказ был отправлен в обработку!\',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      });\n    },\n    validate: function validate() {\n      if (this.$root.validateForm()) {\n        if (this.sendValid) {\n          this.send();\n        }\n      }\n    },\n    validateForm: function validateForm() {\n      var _this = this;\n\n      var formId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \'validated-form\';\n      var errorObjectName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \'validationErrors\';\n      var nodes = document.querySelectorAll("#".concat(formId, " :invalid"));\n      var nodesFpr = document.querySelectorAll("#".concat(formId))[0].elements;\n      var vm = this; //current vue instance;\n\n      Object.keys(this[errorObjectName]).forEach(function (key) {\n        _this[errorObjectName][key] = null;\n      });\n\n      if (nodes.length > 0) {\n        nodes.forEach(function (node) {\n          if (node.title) {\n            _this[errorObjectName][node.id] = node.title;\n          } else {\n            _this[errorObjectName][node.id] = node.validationMessage;\n          }\n\n          node.addEventListener(\'change\', function (e) {\n            vm.validateForm(formId, errorObjectName);\n          });\n        });\n        this.sendValid = false;\n      } else if (nodes.length == 0) {\n        this.sendValid = true;\n      } else {\n        this.sendValid = false;\n      }\n\n      return true;\n    }\n  },\n  watch: {\n    lid_name: function lid_name() {\n      this.form.lid_name = this.lid_name ? this.lid_name : "";\n    },\n    lid_phone: function lid_phone() {\n      this.form.lid_phone = this.lid_phone ? this.lid_phone : "";\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/lid.js\n')},5:
/*!***********************************!*\
  !*** multi ./resources/js/lid.js ***!
  \***********************************/
/*! no static exports found */function(I,C,Q){I.exports=Q(/*! D:\OSPanel\domains\applesale\resources\js\lid.js */"./resources/js/lid.js")}});